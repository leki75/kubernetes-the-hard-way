# TODO: try to download from all nodes
- name: "Download previously generated files"
  fetch:
    src: "/var/lib/kubernetes/{{ item }}"
    dest: "certs/{{ item }}"
    fail_on_missing: false
    flat: true
  loop:
    - ca.pem
    - ca-key.pem
    - kubernetes.pem
    - kubernetes-key.pem
    - service-account.pem
    - service-account-key.pem
    - encryption-config.yaml
  run_once: true
  become: true

- name: "Generate kube-apiserver certificates"
  import_role:
    name: utils/ca
  vars:
    ca_certs:
      - {name: "admin", cn: "admin", o: "system:masters"}
      - {name: "kubernetes", cn: "system:kubernetes", san: "1.2.3.4"}
      - {name: "service-account", cn: "service-accounts"}

- name: "Check encryption config file"
  stat:
    path: certs/encryption-config.yaml
  delegate_to: localhost
  run_once: true
  register: kubeapi_encryption_check

- name: "Generate encryption config file"
  block:
    - command: >
        head -c 32 /dev/urandom
      register: kubeapi_encryption_key

    - copy:
        dest: certs/encryption-config.yaml
        content: |
          kind: EncryptionConfig
          apiVersion: v1
          resources:
            - resources:
                - secrets
          providers:
            - aescbc:
                keys:
                  - name: key1
                    secret: {{ kubeapi_encryption_key.stdout | b64encode }}
            - identity: {}
  delegate_to: localhost
  run_once: true
  when: not kubeapi_encryption_check.stat.exists

- name: "Create /var/lib/kubernetes directory"
  file:
    path: /var/lib/kubernetes
    state: directory
    owner: root
    group: root
    mode: 0700
  become: true

- name: "Copy keys and certificates"
  copy:
    dest: "/var/lib/kubernetes/{{ item }}"
    src: "certs/{{ item }}"
    owner: root
    group: root
    mode: 0600
  loop:
    - ca.pem
    - ca-key.pem
    - kubernetes.pem
    - kubernetes-key.pem
    - service-account.pem
    - service-account-key.pem
    - encryption-config.yaml
  become: true

- name: "Download kube-apiserver binary"
  get_url:
    url: "{{ download_apiserver_url }}"
    dest: /usr/local/bin/kube-apiserver
    owner: root
    group: root
    mode: 0755
  become: true

- name: "Download kubectl binary"
  get_url:
    url: "{{ download_kubectl_url }}"
    dest: /usr/local/bin/kubectl
    owner: root
    group: root
    mode: 0755
  become: true

#create service
#  /etc/systemd/system/kube-apiserver.service
